name: Build and upload to PyPI

# Build on every branch push, tag push, and pull request change:
on: [push, pull_request]
# Alternatively, to publish when a (published) GitHub Release is created, use the following:
# on:
#   push:
#   pull_request:
#   release:
#     types:
#       - published

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        platform: [x64, x32]
        exclude:
          - os: macos-latest  # macos-10.15
            platform: x32
          - os: ubuntu-latest
            platform: x32
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==1.6.3
      - name: Install Visual C++ for Python 2.7
        if: runner.os == 'Windows'
        run: |
          choco install vcpython27 -f -y
    #   - name: Build wheels
    #     run: |
    #       python -m pip install --upgrade pip
    #       python -m pip install --upgrade setuptools wheel
    #       python -m pip install --progress-bar=off  -r ci/requirements.txt
    #       python -m cibuildwheel --output-dir wheelhouse

      - name: Build wheels on Windows
        if: (runner.os == 'Windows' && runner.platform == 'x64')
        env: 
          CIBW_BUILD: cp36-win_amd64
        run: |
          python -m cibuildwheel --output-dir wheelhouse
      - name: Build wheels on Windows
        if: (runner.os == 'Windows' && runner.platform == 'x32')
        env: 
          CIBW_BUILD: cp36-win32
        run: |
          python -m cibuildwheel --output-dir wheelhouse
      - name: Build wheels on Linux
        if: runner.os == 'linux'
        env: 
          CIBW_BUILD: cp36-manylinux_x86_64 cp36-manylinux_i686
        run: |
          python -m cibuildwheel --output-dir wheelhouse
      - name: Build wheels on MacOS
        if: runner.os == 'macos'
        env: 
          CIBW_BUILD: 	cp36-macosx_x86_64
        run: |
          python -m cibuildwheel --output-dir wheelhouse
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
        

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Build sdist
        run: |
          python -m pip install numpy>=1.19.0
          python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # publish when a GitHub Release is created
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.test_pypi }}
          repository_url: https://test.pypi.org/legacy/  # only for testinng