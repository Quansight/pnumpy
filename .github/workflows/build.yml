name: Build and upload to PyPI

# Build on every branch push, tag push, and pull request change:
on: [push, pull_request]
# Alternatively, to publish when a (published) GitHub Release is created, use the following:
# on:
#   push:
#   pull_request:
#   release:
#     types:
#       - published

jobs:
  build_wheels:
    name: Build wheels [${{ matrix.os }} ${{ matrix.platform}}]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        os: [ubuntu-latest, macos-latest, windows-latest]
        platform: [x64, x32]
        exclude:
          - os: macos-latest  # macos-10.15
            platform: x32
        #   - os: ubuntu-latest
        #     platform: x32
          - os: windows-latest
            platform: x32
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==1.6.3
      - name: Install Visual C++ for Python 2.7
        if: runner.os == 'Windows'
        run: |
          choco install vcpython27 -f -y

      - name: Build wheels on ${{ matrix.os}}
        run: |
					RUNNER_OS="${{ runner.os }}"
					PLATFORM="${{ matrix.platform }}"
					PYTHON_VERSION="${{ matrix.python-version }}"
					echo $RUNNER_OS
					echo $PLATFORM
					echo $PYTHON_VERSION

					if [ "$RUNNER_OS" == "Windows" ]; then
							if [ "$PLATFORM" == "x64" ]; then
									if [ "$PYTHON_VERSION" == "3.6" ]; then
											export CIBW_BUILD="cp36-win_amd64"
									elif [ "$PYTHON_VERSION" == "3.7" ]; then
											export CIBW_BUILD="cp37-win_amd64"
									elif [ "$PYTHON_VERSION" == "3.8" ]; then
											export CIBW_BUILD="cp38-win_amd64"  
									fi
							elif [ "$PLATFORM" == "x32" ]; then
									export CIBW_BUILD="cp36-win32 cp37-win32 cp38-win32"
							fi

					elif [ "$RUNNER_OS" == "Linux" ]; then
							if [ "$PLATFORM" == "x64" ]; then
									export CIBW_BUILD="cp36-manylinux_x86_64 cp36-manylinux_aarch64 cp36-manylinux_ppc64le cp36-manylinux_s390x"
							elif [ "$PLATFORM" == "x32" ]; then
									export CIBW_BUILD="cp36-manylinux_i686"
							fi
					elif [ "$RUNNER_OS" == "macOS" ]; then
							export CIBW_BUILD="cp36-macosx_x86_64"
					fi
					echo $CIBW_BUILD
					python -m cibuildwheel --output-dir wheelhouse

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Build sdist
        run: |
          python -m pip install numpy>=1.19.0
          python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # publish when a GitHub Release is created
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.test_pypi }}  # switch to non-test pwd after testing
          repository_url: https://test.pypi.org/legacy/  # remove line after testing