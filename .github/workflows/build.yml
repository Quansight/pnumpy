name: Build and upload to PyPI
# publish when a (published) GitHub Release is created
on: [push, pull_request]
# on:
#   push:
#   pull_request:
#   release:
#     types:
#       - published

jobs:
  build_wheels:
    name: Build wheels ${{ matrix.os }}, ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        platform: [x32, x64]
        exclude:
          - os: macos-latest
            platform: x32
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==1.6.3
      - name: Install Visual C++ for Python 2.7
        if: runner.os == 'Windows'
        run: |
          choco install vcpython27 -f -y    
      - name: Build wheels on ${{ matrix.os}}
        run: |
          RUNNER_OS="${{ runner.os }}"
          PLATFORM="${{ matrix.platform }}"
          echo $RUNNER_OS
          echo $PLATFORM

          if [ "$RUNNER_OS" == "Windows" ]; then
            if [ "$PLATFORM" == "x64" ]; then
              export CIBW_BUILD="cp36-win_amd64 cp37-win_amd64 cp38-win_amd64"
            elif [ "$PLATFORM" == "x32" ]; then
              export CIBW_BUILD="cp36-win32 cp37-win32 cp38-win32"
            fi

          elif [ "$RUNNER_OS" == "Linux" ]; then
            if [ "$PLATFORM" == "x64" ]; then
              export CIBW_BUILD="cp36-manylinux_x86_64 cp36-manylinux_aarch64 cp36-manylinux_ppc64le cp36-manylinux_s390x cp37-manylinux_x86_64 cp37-manylinux_aarch64 cp37-manylinux_ppc64le cp37-manylinux_s390x cp38-manylinux_x86_64 cp38-manylinux_aarch64 cp38-manylinux_ppc64le cp38-manylinux_s390x"
            elif [ "$PLATFORM" == "x32" ]; then
              export CIBW_BUILD="cp36-manylinux_i686 cp37-manylinux_i686 cp38-manylinux_i686"
            fi

          elif [ "$RUNNER_OS" == "macOS" ]; then
            export CIBW_BUILD="cp36-macosx_x86_64 cp37-macosx_x86_64 cp38-macosx_x86_64"
          fi
          python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Build sdist
        run: |
          python -m pip install numpy>=1.19.0
          python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # publish when a GitHub Release is created
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.test_pypi }}  # switch to non-test pwd after testing
          repository_url: https://test.pypi.org/legacy/  # remove line after testing